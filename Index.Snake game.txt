<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>Snake Game</title>
    <style>
      canvas {
        border: 1px solid black;
      }
    </style>
  </head>
  <body>
    <canvas id="canvas"></canvas>
    <script src="snake.js"></script>
  </body>
</html>
canvas {
  border: 1px solid black;
}
const canvas = document.getElementById("canvas");
const ctx = canvas.getContext("2d");

// set up the initial state
let snake = [
  {x: 10, y: 10},
  {x: 20, y: 10},
  {x: 30, y: 10},
];
let dx = 10;
let dy = 0;
let food = {x: 0, y: 0};
let score = 0;

// generate a random position for the food
function generateFood() {
  food.x = Math.floor(Math.random() * (canvas.width - 10) / 10) * 10;
  food.y = Math.floor(Math.random() * (canvas.height - 10) / 10) * 10;
}

// draw the snake
function drawSnake() {
  ctx.fillStyle = "green";
  snake.forEach(function(segment) {
    ctx.fillRect(segment.x, segment.y, 10, 10);
  });
}

// move the snake
function advanceSnake() {
  const head = {x: snake[0].x + dx, y: snake[0].y + dy};
  snake.unshift(head);

  // check if the snake ate the food
  if (head.x === food.x && head.y === food.y) {
    score++;
    generateFood();
  } else {
    snake.pop();
  }
}

// draw the food
function drawFood() {
  ctx.fillStyle = "red";
  ctx.fillRect(food.x, food.y, 10, 10);
}

// handle keyboard input
document.addEventListener("keydown", function(event) {
  const keyPressed = event.key;
  if (keyPressed === "ArrowLeft" && dx !== 10) {
    dx = -10;
    dy = 0;
  }
  if (keyPressed === "ArrowUp" && dy !== 10) {
    dx = 0;
    dy = -10;
  }
  if (keyPressed === "ArrowRight" && dx !== -10) {
    dx = 10;
    dy = 0;
  }
  if (keyPressed === "ArrowDown" && dy !== -10) {
    dx = 0;
    dy = 10;
  }
});

// check if the game has ended
function hasGameEnded() {
  for (let i = 1; i < snake.length; i++) {
    const hasCollided = snake[i].x === snake[0].x && snake[i].y === snake[0].y;
    if (hasCollided) {
      return true;
    }
  }
  const hitLeftWall = snake[0].x < 0;
  const hitRightWall = snake[0].x > canvas.width - 10;
  const hitTopWall = snake[0].y < 0;
  const hitBottomWall = snake[0].y > canvas.height - 10;
  return hitLeftWall || hitRightWall || hitTopWall || hitBottomWall
